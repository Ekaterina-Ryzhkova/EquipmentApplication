@page "/person"

@using System
@using System.Linq
@using EquipmentApplication.Shared
@using static MudBlazor.CategoryTypes;

@inject MudBlazor.ISnackbar snackbar
@inject IDialogService DialogService
@inject IJSRuntime JsRuntime


<MudBreadcrumbs Items="_items"></MudBreadcrumbs>

<MudTable Items="GetAll()" Filter="new Func<ResponsePerson,bool>(Search)" @bind-type="person">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Список ответственных лиц</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Искать..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<ResponsePerson, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ResponsePerson, object>(x=>x.FullName)">Ответственное лицо</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ResponsePerson, object>(x=>x.Position)">Должность</MudTableSortLabel></MudTh>
        <MudTh>Действия</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Type Name">@context.Id</MudTd>
        <MudTd DataLabel="Type Name">@context.FullName</MudTd>
        <MudTd DataLabel="Type Name">@context.Position</MudTd>
        <MudTd DataLabel="Actions">
            <MudFab OnClick="@(() => OpenUpdateDialog(context))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small"></MudFab>
            <MudFab OnClick="@(() => Delete(context))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small"></MudFab>
        </MudTd>
    </RowTemplate>
</MudTable>

<MudButton Href="addPerson"
               Variant="Variant.Filled"
               EndIcon="@Icons.Material.Filled.Add"
               Color="Color.Primary"
               Class="pa-3 mt-4">
        Добавить
</MudButton>

@code {
    private string searchString = "";
    private ResponsePerson person = new ResponsePerson();
    private List<ResponsePerson> people = new List<ResponsePerson>();

    
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Главная", href: "/"),
        new BreadcrumbItem("Ответственные лица", href: null, disabled: true)
    };

    protected override async Task OnInitializedAsync()
    {
        people = responsePersonService.GetAll();
    }

    private bool Search(ResponsePerson responsePerson)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
        if (responsePerson.FullName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }

    private List<ResponsePerson> GetAll()
    {
        people = responsePersonService.GetAll();

        return people;
    }

    async Task OpenUpdateDialog(ResponsePerson person)
    {
        var parameters = new DialogParameters { ["person"] = person };
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Medium, FullWidth = true };

        var dialog = await DialogService.ShowAsync<UpdatePersonDialog>("Update Data Person", parameters, options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            GetAll();
        }
    }

    private void Add()
    {
        if (person.Id == 0)
        {
            responsePersonService.Add(person);
            snackbar.Add("Добавлено новое ответственное лицо.",
            Severity.Success);
        }
        else
        {
            responsePersonService.Update(person);
            snackbar.Add("Данные об ответственном лице изменены.",
            Severity.Success);
        }

        person = new ResponsePerson();
        GetAll();
    }

    private void Update(ResponsePerson responsePerson)
    {
        person = responsePerson;
        StateHasChanged();
    }

    private async Task Delete(ResponsePerson responsePerson)
    {
        responsePersonService.Delete(responsePerson);
        snackbar.Add("Ответственное лицо удалено.",
    Severity.Success);
        GetAll();
    }
}
